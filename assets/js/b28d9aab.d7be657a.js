"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3620],{9107:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var s=o(4848),a=o(8453);const r={},d=void 0,i={id:"Linux/Fedora Setup",title:"Fedora Setup",description:"Run all 3 commands to enable correct repositories on fedora workstation",source:"@site/docs/Linux/Fedora Setup.md",sourceDirName:"Linux",slug:"/Linux/Fedora Setup",permalink:"/docs/Linux/Fedora Setup",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Zipline",permalink:"/docs/Docker Compose/Zipline"},next:{title:"Flash ISO to USB",permalink:"/docs/Linux/Flash ISO to USB"}},t={},l=[{value:"Add fedora to local AD domain.",id:"add-fedora-to-local-ad-domain",level:3}];function c(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Run all 3 commands to enable correct repositories on fedora workstation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo dnf install fedora-workstation-repositories\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo dnf config-manager --set-enabled rpmfusion-free rpmfusion-nonfree\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm\n"})}),"\n",(0,s.jsx)(n.h3,{id:"add-fedora-to-local-ad-domain",children:"Add fedora to local AD domain."}),"\n",(0,s.jsx)(n.p,{children:"install the following packages:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo dnf install realmd sssd oddjob oddjob-mkhomedir adcli samba-common-tools\n"})}),"\n",(0,s.jsx)(n.p,{children:"connect to the domain using the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo realm join -U administrator yourdomain.com\n"})}),"\n",(0,s.jsxs)(n.p,{children:["configure the file ",(0,s.jsx)(n.code,{children:"/etc/sssd/sssd.conf"})," to include the following:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"[sssd]\ndomains = yourdomain.com\nconfig_file_version = 2\nservices = nss, pam\n\n[domain/yourdomain.com]\nad_domain = yourdomain.com\nkrb5_realm = YOURDOMAIN.COM\nrealmd_tags = manages-system joined-with-adcli\ncache_credentials = True\nid_provider = ad\nkrb5_store_password_if_offline = True\ndefault_shell = /bin/bash\nldap_id_mapping = True\nuse_fully_qualified_names = False\nfallback_homedir = /home/%u\naccess_provider = ad\nsudo_provider = ad\n"})}),"\n",(0,s.jsx)(n.p,{children:"specifically the last line is not default."}),"\n",(0,s.jsx)(n.p,{children:"Then restart sssd"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart sssd\n"})}),"\n",(0,s.jsx)(n.p,{children:"or restart to be able to login."})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>i});var s=o(6540);const a={},r=s.createContext(a);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);