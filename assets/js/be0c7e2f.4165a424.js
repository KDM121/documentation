"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2083],{6348:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var o=t(4848),r=t(8453);const s={},i=void 0,a={id:"Docker Compose/Authentik",title:"Authentik",description:"",source:"@site/docs/Docker Compose/Authentik.md",sourceDirName:"Docker Compose",slug:"/Docker Compose/Authentik",permalink:"/docs/Docker Compose/Authentik",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",next:{title:"Bookstack",permalink:"/docs/Docker Compose/Bookstack"}},c={},d=[];function u(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-YAML",children:'---\nversion: \'3.4\'\nservices:\n\xa0 postgresql:\n\xa0 \xa0 image: docker.io/library/postgres:12-alpine\n\xa0 \xa0 restart: unless-stopped\n\xa0 \xa0 healthcheck:\n\xa0 \xa0 \xa0 test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]\n\xa0 \xa0 \xa0 start_period: 20s\n\xa0 \xa0 \xa0 interval: 30s\n\xa0 \xa0 \xa0 retries: 5\n\xa0 \xa0 \xa0 timeout: 5s\n\xa0 \xa0 volumes:\n\xa0 \xa0 \xa0 - ./database:/var/lib/postgresql/data\n\xa0 \xa0 environment:\n\xa0 \xa0 \xa0 - POSTGRES_PASSWORD=${PG_PASS:?database password required}\n\xa0 \xa0 \xa0 - POSTGRES_USER=${PG_USER:-authentik}\n\xa0 \xa0 \xa0 - POSTGRES_DB=${PG_DB:-authentik}\n\xa0 \xa0 env_file:\n\xa0 \xa0 \xa0 - .env\n\xa0 redis:\n\xa0 \xa0 image: docker.io/library/redis:alpine\n\xa0 \xa0 command: --save 60 1 --loglevel warning\n\xa0 \xa0 restart: unless-stopped\n\xa0 \xa0 healthcheck:\n\xa0 \xa0 \xa0 test: ["CMD-SHELL", "redis-cli ping | grep PONG"]\n\xa0 \xa0 \xa0 start_period: 20s\n\xa0 \xa0 \xa0 interval: 30s\n\xa0 \xa0 \xa0 retries: 5\n\xa0 \xa0 \xa0 timeout: 3s\n\xa0 \xa0 volumes:\n\xa0 \xa0 \xa0 - redis:/data\n\xa0 server:\n\xa0 \xa0 image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2023.4.1}\n\xa0 \xa0 restart: unless-stopped\n\xa0 \xa0 command: server\n\xa0 \xa0 environment:\n\xa0 \xa0 \xa0 AUTHENTIK_REDIS__HOST: redis\n\xa0 \xa0 \xa0 AUTHENTIK_POSTGRESQL__HOST: postgresql\n\xa0 \xa0 \xa0 AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}\n\xa0 \xa0 \xa0 AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}\n\xa0 \xa0 \xa0 AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}\n\xa0 \xa0 volumes:\n\xa0 \xa0 \xa0 - ./media:/media\n\xa0 \xa0 \xa0 - ./custom-templates:/templates\n\xa0 \xa0 env_file:\n\xa0 \xa0 \xa0 - .env\n\xa0 \xa0 ports:\n\xa0 \xa0 \xa0 - "${AUTHENTIK_PORT_HTTP:-9000}:9000"\n\xa0 \xa0 \xa0 - "${AUTHENTIK_PORT_HTTPS:-9443}:9443"\n\xa0 worker:\n\xa0 \xa0 image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2023.4.1}\n\xa0 \xa0 restart: unless-stopped\n\xa0 \xa0 command: worker\n\xa0 \xa0 environment:\n\xa0 \xa0 \xa0 AUTHENTIK_REDIS__HOST: redis\n\xa0 \xa0 \xa0 AUTHENTIK_POSTGRESQL__HOST: postgresql\n\xa0 \xa0 \xa0 AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}\n\xa0 \xa0 \xa0 AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}\n\xa0 \xa0 \xa0 AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}\n\xa0 \xa0 # `user: root` and the docker socket volume are optional.\n\xa0 \xa0 # See more for the docker socket integration here:\n\xa0 \xa0 # https://goauthentik.io/docs/outposts/integrations/docker\n\xa0 \xa0 # Removing `user: root` also prevents the worker from fixing the permissions\n\xa0 \xa0 # on the mounted folders, so when removing this make sure the folders have the correct UID/GID\n\xa0 \xa0 # (1000:1000 by default)\n\xa0 \xa0 user: root\n\xa0 \xa0 volumes:\n\xa0 \xa0 \xa0 - /var/run/docker.sock:/var/run/docker.sock\n\xa0 \xa0 \xa0 - ./media:/media\n\xa0 \xa0 \xa0 - ./certs:/certs\n\xa0 \xa0 \xa0 - ./custom-templates:/templates\n\xa0 \xa0 env_file:\n\xa0 \xa0 \xa0 - .env\nvolumes:\n\xa0 database:\n\xa0 \xa0 driver: local\n\xa0 redis:\n\xa0 \xa0 driver: local\n'})})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(6540);const r={},s=o.createContext(r);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);