"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8609],{8905:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>i});var t=o(4848),r=o(8453);const s={},a=void 0,c={id:"Proxmox/LXC Config",title:"LXC Config",description:'Deploy a "wgetable" copy with [[NGINX web server]]',source:"@site/docs/Proxmox/LXC Config.md",sourceDirName:"Proxmox",slug:"/Proxmox/LXC Config",permalink:"/docs/Proxmox/LXC Config",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"General",permalink:"/docs/Proxmox/General"},next:{title:"PVE 8 Add SMB share",permalink:"/docs/Proxmox/PVE 8 Add SMB share"}},d={},i=[];function u(e){const n={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'#!/bin/bash\n\n(crontab -l ; echo "0 2 * * * /usr/bin/apt-get update -y && /usr/bin/apt-get upgrade -y") | crontab -\necho "Updating and Upgrading"\napt update -y && apt upgrade -y\necho "installing curl and sudo"\napt install curl -y\napt install sudo -y\n\n# creating new user\nwhile true; do\nread -p "Do you want to create a new sudo user? (y/n) " yn\n\ncase $yn in\n        [yY] ) echo creating new user;\n                read -p "Enter the username: " username;\n                echo "adding user $username";\n                echo " type your password in";\n                adduser $username;\n\n                echo "add user to sudo group";\n                sudo usermod -aG sudo $username;\n                break;;\n        [nN] )  echo skipping creation of new sudo user;\n                break;;\n        *)      echo invalid response;;\nesac\ndone\n# created user\n\n# docker install\nwhile true; do\n\nread -p "Do you want to install docker? (y/n) " yn\n\ncase $yn in\n        [yY] ) echo installing;\n                                sudo apt update\n                                sudo apt-get install ca-certificates -y\n                                sudo install -m 0755 -d /etc/apt/keyrings\n                                sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc\n                                sudo chmod a+r /etc/apt/keyrings/docker.asc\n                                echo \\\n                                  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \\\n                                $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \\\n                                sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n                                sudo apt-get update\n                                sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y\n                break;;\n        [nN] ) echo not installing;\n                break;;\n        *) echo invalid response;;\nesac\n\ndone\n# end docker install\n\necho "done! docker and compose are installed"\n\n# install dockge\nwhile true; do\n\nread -p "Do you want to install dockge? (y/n) " yn\n\ncase $yn in\n                [yY] ) mkdir -p /home/$username/docker/dockge\n                                cd /home/$username/docker/dockge\n                                echo "username=$username" >> .env\n                                echo \\\n                                "services:\n  dockge:\n    image: louislam/dockge:1\n    restart: unless-stopped\n    ports:\n      - 5001:5001\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - /home/$username/docker/dockge/data:/app/data\n      - /home/$username/docker:/home/docker/stacks\n    environment:\n      - DOCKGE_STACKS_DIR=/home/$username/stacks\nnetworks: {}" \\\n                                        >> compose.yaml\n                                docker compose up -d\n                        break;;\n\t\t[nN] ) echo "not installing";\n                                break;;\n                *) echo invalid response;;\nesac\ndone\n\necho "switch user to $username"\nsu - $username\n'})}),"\n",(0,t.jsx)(n.p,{children:'Deploy a "wgetable" copy with [[NGINX web server]]'})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>c});var t=o(6540);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);